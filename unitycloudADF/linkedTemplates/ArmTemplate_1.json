{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "unitycloudADF"
		},
		"Snowflake_UnityCloudFFA_MobilityCore_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "SnowflakeMobilityCoreSysAdminConnectionString"
		},
		"Snowflake_UnityCloudFFA_MobilityCoreLocal_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "SnowflakeMobilityCoreLocalSysAdminConnectionString"
		},
		"linkedService1_properties_typeProperties_sasUri_secretName": {
			"type": "string",
			"defaultValue": "StagingBlobSas"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_UnityCloudFFA_MobilityCore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"authenticationType": "Basic",
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault_kv_unityclouddiag",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('Snowflake_UnityCloudFFA_MobilityCore_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake_UnityCloudFFA_MobilityCoreLocal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"authenticationType": "Basic",
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('Snowflake_UnityCloudFFA_MobilityCoreLocal_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('linkedService1_properties_typeProperties_sasUri_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlackBird2_Child_PipeLine_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetStageTableCmd",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": {
									"value": "@concat('stageTablecreatorquery(',string(pipeline().parameters.IterationId),',\"',pipeline().parameters.destinationTable,'\",\"',pipeline().parameters.up,'\")')",
									"type": "Expression"
								},
								"queryTimeout": "00:10:00",
								"noTruncation": false
							},
							"dataset": {
								"referenceName": "AzureDataExplorerTable2",
								"type": "DatasetReference",
								"parameters": {
									"TblName": "BLSCKBIRD_FLOW_UP"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "CreateStageTables",
						"type": "AzureDataExplorerCommand",
						"dependsOn": [
							{
								"activity": "GetStageTableCmd",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": {
								"value": "@activity('GetStageTableCmd').output.firstRow.stgcmd",
								"type": "Expression"
							},
							"commandTimeout": "00:20:00"
						},
						"linkedServiceName": {
							"referenceName": "Blackbird2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "BLACKBIRD_TO_BLACKBIRD2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CreateStageTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": {
									"value": "@pipeline().parameters.SnowFlakeQuery",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "AzureDataExplorerSink",
								"ingestionMappingName": ""
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								},
								"path": "mobilecoresteam"
							},
							"dataIntegrationUnits": 32
						},
						"inputs": [
							{
								"referenceName": "FLOW_UP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureDataExplorerTable2",
								"type": "DatasetReference",
								"parameters": {
									"TblName": {
										"value": "@activity('GetStageTableCmd').output.firstRow.stage_table",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SnowFlakeQuery": {
						"type": "string"
					},
					"IterationId": {
						"type": "int"
					},
					"destinationTable": {
						"type": "string"
					},
					"up": {
						"type": "string"
					}
				},
				"variables": {
					"test": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcSnowflakeMCC_EDR_FLOW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_UnityCloudFFA_MobilityCoreLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "SF_LOAD_TS_EST",
						"precision": 29,
						"scale": 9
					},
					{
						"name": "RECORD_CONTENT",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RECORD_METADATA",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "METADATA$ACTION",
						"precision": 6,
						"scale": 0
					},
					{
						"name": "METADATA$ISUPDATE",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "METADATA$ROW_ID",
						"precision": 40,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "MSLOGS",
					"table": "STREAM_MCC_EDR_FLOW_UP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_UnityCloudFFA_MobilityCoreLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcSnowflakeMCC_EDR_SESSION')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_UnityCloudFFA_MobilityCoreLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "SF_LOAD_TS_EST",
						"precision": 29,
						"scale": 9
					},
					{
						"name": "RECORD_CONTENT",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RECORD_METADATA",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "METADATA$ACTION",
						"precision": 6,
						"scale": 0
					},
					{
						"name": "METADATA$ISUPDATE",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "METADATA$ROW_ID",
						"precision": 40,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "MSLOGS",
					"table": "STREAM_MCC_EDR_SESSION_UP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_UnityCloudFFA_MobilityCoreLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcSnowflakeMobilityCoreSMF_PROD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_UnityCloudFFA_MobilityCoreLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "SF_LOAD_TS_EST",
						"precision": 29,
						"scale": 9
					},
					{
						"name": "RECORD_CONTENT",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RECORD_METADATA",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "METADATA$ACTION",
						"precision": 6,
						"scale": 0
					},
					{
						"name": "METADATA$ISUPDATE",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "METADATA$ROW_ID",
						"precision": 40,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "MSLOGS",
					"table": "STREAM_SMF_PROD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_UnityCloudFFA_MobilityCoreLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SrcSnowflakeMobilityCoreUPF_PROD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_UnityCloudFFA_MobilityCoreLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "SF_LOAD_TS_EST",
						"precision": 29,
						"scale": 9
					},
					{
						"name": "RECORD_CONTENT",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RECORD_METADATA",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "METADATA$ACTION",
						"precision": 6,
						"scale": 0
					},
					{
						"name": "METADATA$ISUPDATE",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "METADATA$ROW_ID",
						"precision": 40,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "MSLOGS",
					"table": "STREAM_UPF_PROD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_UnityCloudFFA_MobilityCoreLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Src_LOGS_FLUENTD_ANY_RAW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_UnityCloudFFA_MobilityCoreLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "SF_LOAD_TS",
						"type": "TIMESTAMP_NTZ",
						"precision": 29,
						"scale": 9
					},
					{
						"name": "RAW_RECORD",
						"type": "VARIANT",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "FILE_NAME",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "MSLOGS",
					"table": "LOGS_FLUENTD_SYSLOG_CSMF_RAW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_UnityCloudFFA_MobilityCoreLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Src_Snowflake_MobilityCore_SMF_Events_toADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_UnityCloudFFA_MobilityCoreLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "SF_LOAD_TS_EST",
						"precision": 29,
						"scale": 9
					},
					{
						"name": "RECORD_CONTENT",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RECORD_METADATA",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "METADATA$ACTION",
						"precision": 6,
						"scale": 0
					},
					{
						"name": "METADATA$ISUPDATE",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "METADATA$ROW_ID",
						"precision": 40,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "MSLOGS",
					"table": "STREAM_SMF_EVENT_TOADLS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_UnityCloudFFA_MobilityCoreLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Src_Snowflake_MobilityCore_SMF_PROD_toADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_UnityCloudFFA_MobilityCoreLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "SF_LOAD_TS_EST",
						"precision": 29,
						"scale": 9
					},
					{
						"name": "RECORD_CONTENT",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RECORD_METADATA",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "METADATA$ACTION",
						"precision": 6,
						"scale": 0
					},
					{
						"name": "METADATA$ISUPDATE",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "METADATA$ROW_ID",
						"precision": 40,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "MSLOGS",
					"table": "STREAM_SMF_PROD_TOADLS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_UnityCloudFFA_MobilityCoreLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Src_Snowflake_MobilityCore_UPF_Events_toADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_UnityCloudFFA_MobilityCoreLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "SF_LOAD_TS_EST",
						"precision": 29,
						"scale": 9
					},
					{
						"name": "RECORD_CONTENT",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RECORD_METADATA",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "METADATA$ACTION",
						"precision": 6,
						"scale": 0
					},
					{
						"name": "METADATA$ISUPDATE",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "METADATA$ROW_ID",
						"precision": 40,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "MSLOGS",
					"table": "STREAM_UPF_EVENT_TOADLS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_UnityCloudFFA_MobilityCoreLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Src_Snowflake_MobilityCore_UPF_PROD_toADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake_UnityCloudFFA_MobilityCoreLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeTable",
				"schema": [
					{
						"name": "SF_LOAD_TS_EST",
						"precision": 29,
						"scale": 9
					},
					{
						"name": "RECORD_CONTENT",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "RECORD_METADATA",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "METADATA$ACTION",
						"precision": 6,
						"scale": 0
					},
					{
						"name": "METADATA$ISUPDATE",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "METADATA$ROW_ID",
						"precision": 40,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "MSLOGS",
					"table": "STREAM_UPF_PROD_TOADLS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake_UnityCloudFFA_MobilityCoreLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlackBird2_Child_PipeLine_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetQueries",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataExplorerSource",
								"query": {
									"value": "@concat('querytranformer(\"',pipeline().parameters.startdate,'\",\"',pipeline().parameters.enddate,'\",\"',pipeline().parameters.streamname,'\",\"',pipeline().parameters.destinationTable,'\",\"',pipeline().parameters.up,'\",\"',pipeline().parameters.SnowFlakeQuery,'\")')",
									"type": "Expression"
								},
								"queryTimeout": "00:10:00",
								"noTruncation": false
							},
							"dataset": {
								"referenceName": "AzureDataExplorerTable2",
								"type": "DatasetReference",
								"parameters": {
									"TblName": "BLSCKBIRD_FLOW_UP"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Loop Through the results",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetQueries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetQueries').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 24,
							"activities": [
								{
									"name": "Call BlackBir2 Child Pipeline2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "BlackBird2_Child_PipeLine_2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SnowFlakeQuery": {
												"value": "@item().Cmd",
												"type": "Expression"
											},
											"IterationId": {
												"value": "@item().Id",
												"type": "Expression"
											},
											"destinationTable": {
												"value": "@item().dest_table",
												"type": "Expression"
											},
											"up": {
												"value": "@pipeline().parameters.up",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"startdate": {
						"type": "string"
					},
					"enddate": {
						"type": "string"
					},
					"streamname": {
						"type": "string"
					},
					"destinationTable": {
						"type": "string"
					},
					"up": {
						"type": "string"
					},
					"SnowFlakeQuery": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/BlackBird2_Child_PipeLine_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stream - MobilityCore_SMF_FEDERATE_PROD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StreamMobilityCore_SMF_FEDERATE_PROD",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": "select SF_LOAD_TS_EST, RECORD_CONTENT from \"MOBILITYCORELOCAL\".\"MSLOGS\".\"STREAM_SMF_PROD\"\nwhere (RECORD_CONTENT:tags.appName = 'smfcc_interface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_pcfinterface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_procedure'\nOR RECORD_CONTENT:tags.appName = 'smfcc_pgw_procedure'\nOR RECORD_CONTENT:tags.appName = 'pgwcc_interface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_pfcp_interface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_gtpcinterface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_udminterface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_chfinterface'\nOR RECORD_CONTENT:tags.job = 'kube-state-metrics' \nOR RECORD_CONTENT:tags.job = 'pfcp' \nOR RECORD_CONTENT:tags.job = 'smfmonitor')\nAND TO_DATE(SF_LOAD_TS_EST) >= TO_DATE('2023-01-01','yyyy-mm-dd')",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "AzureDataExplorerSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								},
								"path": "mobilecoresteam"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SF_LOAD_TS_EST"
										},
										"sink": {
											"name": "SF_LOAD_TS_EST",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "RECORD_CONTENT"
										},
										"sink": {
											"name": "RECORD_CONTENT",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SrcSnowflakeMobilityCoreSMF_PROD",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkADXMobilityCore_SMF_FEDERATE_PROD",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-07-28T16:08:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SrcSnowflakeMobilityCoreSMF_PROD')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stream - MobilityCore_UPF_FEDERATE_PROD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StreamMobilityCore_UPF_FEDERATE_PROD",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": "select SF_LOAD_TS_EST, RECORD_CONTENT from \"MOBILITYCORELOCAL\".\"MSLOGS\".\"STREAM_UPF_PROD\"\nwhere (RECORD_CONTENT:tags.job = 'pfcp'\nOR RECORD_CONTENT:tags.appName = 'sess_mgr_control_plane_stats'\nOR RECORD_CONTENT:tags.appName = 'sess_mgr_data_plane_stats'\nOR RECORD_CONTENT:tags.appName = 'sess_mgr_intf_stats'\nOR RECORD_CONTENT:tags.appName = 'sess_mgr_session_db_stats'\nOR RECORD_CONTENT:tags.appName = 'sess_mgr_vpp_threads_cpu_utilization'\nOR RECORD_CONTENT:tags.appName = 'pfcp_procedure'\nOR RECORD_CONTENT:tags.appName = 'pfcp_protocol')\nAND TO_DATE(SF_LOAD_TS_EST) >= TO_DATE('2022-10-20','yyyy-mm-dd') ",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "AzureDataExplorerSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								},
								"path": "mobilecoresteam"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SF_LOAD_TS_EST"
										},
										"sink": {
											"name": "SF_LOAD_TS_EST",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "RECORD_CONTENT"
										},
										"sink": {
											"name": "RECORD_CONTENT",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SrcSnowflakeMobilityCoreUPF_PROD",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkADXMobilityCore_UPF_FEDERATE_PROD",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-07-28T16:08:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SrcSnowflakeMobilityCoreUPF_PROD')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stream - SMF_Events_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Snowflake to RAW Kusto table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": "select TO_TIMESTAMP(RAW_RECORD['@timestamp']) AS SF_LOAD_TS, RAW_RECORD from MOBILITYCORELOCAL.MSLOGS.STREAM_SMF_EVENT_TOADLS  \nwhere substr(RAW_RECORD['kubernetes']['host'], 1, 7) in (select substr(SITE, 1, 7) from MOBILITYCORELOCAL.MSLOGS.SPOTLIGHT_SITES)\nAND TO_DATE(SF_LOAD_TS) >= TO_DATE('2022-11-04','yyyy-mm-dd') ",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								},
								"path": "mobilecoresteam"
							}
						},
						"inputs": [
							{
								"referenceName": "Src_Snowflake_MobilityCore_SMF_Events_toADLS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sink_SMF_Events_ADLS_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-08-24T21:00:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Src_Snowflake_MobilityCore_SMF_Events_toADLS')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stream - SMF_Metrics_to_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Snowflake to ADLS Sink",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": "select SF_LOAD_TS_EST, RECORD_CONTENT from \"MOBILITYCORELOCAL\".\"MSLOGS\".\"STREAM_SMF_PROD_TOADLS\"\nwhere (RECORD_CONTENT:tags.appName = 'smfcc_interface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_pcfinterface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_procedure'\nOR RECORD_CONTENT:tags.appName = 'smfcc_pgw_procedure'\nOR RECORD_CONTENT:tags.appName = 'pgwcc_interface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_pfcp_interface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_gtpcinterface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_udminterface'\nOR RECORD_CONTENT:tags.appName = 'smfcc_chfinterface'\nOR RECORD_CONTENT:tags.job = 'pfcp' \nOR RECORD_CONTENT:tags.job = 'smfmonitor')\nAND TO_DATE(SF_LOAD_TS_EST) >= TO_DATE('2022-11-03','yyyy-mm-dd') ",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								},
								"path": "mobilecoresteam"
							}
						},
						"inputs": [
							{
								"referenceName": "Src_Snowflake_MobilityCore_SMF_PROD_toADLS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sink_SMF_Metrics_ADLS_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-08-24T21:00:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Src_Snowflake_MobilityCore_SMF_PROD_toADLS')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stream - STREAM_LOGS_FLUENTD_DEBUG_CSMF_RAW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Snowflake to RAW Kusto table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": "SELECT TO_TIMESTAMP(RAW_RECORD['@timestamp']) AS SF_LOAD_TS, RAW_RECORD FROM MOBILITYCORELOCAL.MSLOGS.STREAM_LOGS_FLUENTD_DEBUG_CSMF_RAW \nwhere substr(RAW_RECORD['kubernetes']['host'], 1, 7) in (select substr(SITE, 1, 7) from MOBILITYCORELOCAL.MSLOGS.SPOTLIGHT_SITES)\nand TO_DATE(SF_LOAD_TS) >= TO_DATE('2022-11-08','yyyy-mm-dd') ",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "AzureDataExplorerSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								},
								"path": "mobilecoresteam"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SF_LOAD_TS"
										},
										"sink": {
											"name": "SF_LOAD_TS",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "RAW_RECORD"
										},
										"sink": {
											"name": "RAW_RECORD",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Src_LOGS_FLUENTD_ANY_RAW",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sink_LOGS_FLUENTD_ANY_RAW",
								"type": "DatasetReference",
								"parameters": {
									"TABLENAME": "LOGS_FLUENTD_DEBUG_CSMF_RAW"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-08-04T05:31:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Src_LOGS_FLUENTD_ANY_RAW')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stream - STREAM_LOGS_FLUENTD_DEBUG_CUPF_RAW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Snowflake to RAW Kusto table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeSource",
								"query": "SELECT TO_TIMESTAMP(RAW_RECORD['@timestamp']) AS SF_LOAD_TS, RAW_RECORD FROM MOBILITYCORELOCAL.MSLOGS.STREAM_LOGS_FLUENTD_DEBUG_CUPF_RAW \nwhere substr(RAW_RECORD['kubernetes']['host'], 1, 7) in (select substr(SITE, 1, 7) from MOBILITYCORELOCAL.MSLOGS.SPOTLIGHT_SITES)\nand TO_DATE(SF_LOAD_TS) >= TO_DATE('2022-11-08','yyyy-mm-dd') ",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "AzureDataExplorerSink"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService1",
									"type": "LinkedServiceReference"
								},
								"path": "mobilecoresteam"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SF_LOAD_TS"
										},
										"sink": {
											"name": "SF_LOAD_TS",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "RAW_RECORD"
										},
										"sink": {
											"name": "RAW_RECORD",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Src_LOGS_FLUENTD_ANY_RAW",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Sink_LOGS_FLUENTD_ANY_RAW",
								"type": "DatasetReference",
								"parameters": {
									"TABLENAME": "LOGS_FLUENTD_DEBUG_CUPF_RAW"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-08-25T00:28:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Src_LOGS_FLUENTD_ANY_RAW')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		}
	]
}