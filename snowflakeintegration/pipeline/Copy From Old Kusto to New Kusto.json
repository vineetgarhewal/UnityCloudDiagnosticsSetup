{
	"name": "Copy From Old Kusto to New Kusto",
	"properties": {
		"activities": [
			{
				"name": "Generate Queries for copy",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureDataExplorerSource",
						"query": "set notruncation;\nlet old = (\n    cluster('blackbird.westus2.kusto.windows.net').database('blackbird').BLACKBIRD_HTTP_UP \n    | summarize count() by tolong(SESSIONID));\nlet new = (HTTP_UP | summarize count() by tolong(SESSIONID));\nold\n| join kind=fullouter new on SESSIONID\n| where count_ != count_1 and isempty(count_1)\n| sort by SESSIONID asc\n| extend r = row_number(1) / 300\n| summarize ids = replace_string(replace_string(replace_string(tostring(make_list(SESSIONID)), '[', ''), ']', ''), '\"', ''),sum(count_) by r\n| project\n    cmd = strcat(\".set-or-append async HTTP_UP with (distributed  = true) <| cluster('blackbird.westus2.kusto.windows.net').database('blackbird').BLACKBIRD_HTTP_UP\"\n           , \" | where SESSIONID in (\", ids, \") | project \"),\n    sum_count_\n| sort by sum_count_ desc\n| limit 1500",
						"queryTimeout": "00:10:00"
					},
					"dataset": {
						"referenceName": "AzureDataExplorerTable2",
						"type": "DatasetReference",
						"parameters": {
							"TblName": "BLSCKBIRD_FLOW_UP"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Loop Through the Queries",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Generate Queries for copy",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Generate Queries for copy').output.value",
						"type": "Expression"
					},
					"batchCount": 15,
					"activities": [
						{
							"name": "ExecuteQuery",
							"type": "AzureDataExplorerCommand",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"command": {
									"value": "@concat(item().cmd,'EVENTTIME = todatetime(EVENTTIME),CREATIONTIME = todatetime(CREATIONTIME),LASTACCESSTIME = todatetime(LASTACCESSTIME),FLOWID = tostring(FLOWID),BEARERID = tostring(BEARERID),SESSIONID = tostring(SESSIONID),RECORDTYPE = tostring(RECORDTYPE),UEIPADDRESS = tostring(UEIPADDRESS),UEPORT = tostring(UEPORT),NETWORKIPADDRESS = tostring(NETWORKIPADDRESS),NETWORKPORT = tostring(NETWORKPORT),PROTOCOL = tostring(PROTOCOL),UPLINKOCTETS = tolong(UPLINKOCTETS),UPLINKPACKETS = tolong(UPLINKPACKETS),DOWNLINKOCTETS = tolong(DOWNLINKOCTETS),DOWNLINKPACKETS = tolong(DOWNLINKPACKETS),UPLINKDROPOCTETS = tolong(UPLINKDROPOCTETS),UPLINKDROPPACKETS = tolong(UPLINKDROPPACKETS),DOWNLINKDROPOCTETS = tolong(DOWNLINKDROPOCTETS),DOWNLINKDROPPACKETS = tolong(DOWNLINKDROPPACKETS),DPIAPPLICATION = tostring(DPIAPPLICATION),DPIREALPROTOCOL = tostring(DPIREALPROTOCOL),PROTOINFOPROTOCOL = tostring(PROTOINFOPROTOCOL),SUBPROTOCOLTYPE = tostring(SUBPROTOCOLTYPE),SUBPROTOCOLVALUE = tostring(SUBPROTOCOLVALUE),OPERATINGSYSTEM = tostring(OPERATINGSYSTEM),OPERATINGSYSTEMVERSION = toreal(OPERATINGSYSTEMVERSION),IMSI = tostring(IMSI),UPLINKRETRANSPACKETS = tolong(UPLINKRETRANSPACKETS),UPLINKRETRANSBYTES = tolong(UPLINKRETRANSBYTES),DOWNLINKRETRANSPACKETS = tolong(DOWNLINKRETRANSPACKETS),DOWNLINKRETRANSBYTES = tolong(DOWNLINKRETRANSBYTES),INITIALRTT = toreal(INITIALRTT),HTTPTTFBTIME = toreal(HTTPTTFBTIME),DPIPROTOCOLATTRIBUTES = tostring(DPIPROTOCOLATTRIBUTES),DPITRANSFERREDCONTENT = tostring(DPITRANSFERREDCONTENT),DPILAYER7PROTOCOL = tostring(DPILAYER7PROTOCOL),APPLICATIONATTRIBUTES = tostring(APPLICATIONATTRIBUTES),ULINITRTTTIME = toreal(ULINITRTTTIME),DLINITRTTTIME = toreal(DLINITRTTTIME),ULFLOWACTIVITYDURATION = tolong(ULFLOWACTIVITYDURATION),DLFLOWACTIVITYDURATION = tolong(DLFLOWACTIVITYDURATION),ULFLOWPEAKTHROUGHPUT = tolong(ULFLOWPEAKTHROUGHPUT),DLFLOWPEAKTHROUGHPUT = tolong(DLFLOWPEAKTHROUGHPUT),ULSESSIONACTIVITYDURATION = tolong(ULSESSIONACTIVITYDURATION),DLSESSIONACTIVITYDURATION = tolong(DLSESSIONACTIVITYDURATION),ULSESSIONPEAKTHROUGHPUT = toreal(ULSESSIONPEAKTHROUGHPUT),DLSESSIONPEAKTHROUGHPUT = toreal(DLSESSIONPEAKTHROUGHPUT),BUCKETNAME = tostring(BUCKETNAME),BUCKETMIN = tostring(BUCKETMIN),BUCKETMAX = tostring(BUCKETMAX),BUCKETTIME = tostring(BUCKETTIME),BUCKETDIRECTION = tostring(BUCKETDIRECTION),TETHERINGENTITLED = tostring(TETHERINGENTITLED),TETHEREDFLOW = tobool(TETHEREDFLOW),TETHERINGALGORITHM = tostring(TETHERINGALGORITHM),PROTOINFOSUBPROTOCOL = tostring(PROTOINFOSUBPROTOCOL),CLOSUREREASON = tostring(CLOSUREREASON),CPLANESESSIONID = tostring(CPLANESESSIONID),QUALITYINDEX = toreal(QUALITYINDEX),NATIPADDRESS = tostring(NATIPADDRESS),NATPORT = tostring(NATPORT),FLOWATTRIBUTES = tostring(FLOWATTRIBUTES),PROXYBYPASS = tostring(PROXYBYPASS),TTLVALUE = tolong(TTLVALUE),TETHERINGALGORITHMMODE = tostring(TETHERINGALGORITHMMODE),GWNODEID = tostring(GWNODEID),RESERVEFIELD1 = tostring(RESERVEFIELD1),RESERVEFIELD2 = tostring(RESERVEFIELD2),RESERVEFIELD3 = tostring(RESERVEFIELD3),RESERVEFIELD4 = tostring(RESERVEFIELD4),RESERVEFIELD5 = tostring(RESERVEFIELD5),RESERVEFIELD6 = tostring(RESERVEFIELD6),RESERVEFIELD7 = tostring(RESERVEFIELD7),RESERVEFIELD8 = tostring(RESERVEFIELD8),RESERVEFIELD9 = tostring(RESERVEFIELD9),RESERVEFIELD10 = tostring(RESERVEFIELD10),UP = tostring(UP)')",
									"type": "Expression"
								},
								"commandTimeout": "01:00:00"
							},
							"linkedServiceName": {
								"referenceName": "Blackbird2",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}